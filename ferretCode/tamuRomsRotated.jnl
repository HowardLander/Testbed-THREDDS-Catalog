!use "http://testbedapps.sura.org/thredds/dodsC/estuarine_hypoxia/chesroms/agg.nc"
!use "http://testbedapps.sura.org/thredds/dodsC/samples/estuarine_hypoxia/chesroms_1998_test.nc"
use "http://megara.tamu.edu:8080/thredds/dodsC/gcoos/hypoxia"
use "/var/www/tomcat-threddsdev/content/threddsdev/map_roms_tamu_bl.nc"
! This is a workaround and wont be needed after the next release of Ferret
SET AXIS/UNITS="days"/T0="1-jan-1900" `map,RETURN=taxis`


define axis/x=1:126:1 xrho
define axis/y=1:62:1 yrho

! Define masked variables  if mask eq 1 then var
! Then u_masked will be used in place of u below, etc.

let u_masked = if mask_u eq 1 then u
let v_masked = if mask_v eq 1 then v
let ubar_masked = if mask_u eq 1 then ubar
let vbar_masked = if mask_v eq 1 then vbar

let/d=1/units="`lon_rho[d=1],return=units`" lon_rho_p_0 = lon_rho[i=@shf:+1, j=@shf:+1]
let/d=1/units="`lon_rho[d=1],return=units`" lon_rho_p = lon_rho_p_0[gx=xrho@asn,gy=yrho@asn]
let/d=1/units="`lat_rho[d=1],return=units`" lat_rho_p_0 = lat_rho[i=@shf:+1, j=@shf:+1]
let/d=1/units="`lat_rho[d=1],return=units`" lat_rho_p = lat_rho_p_0[gx=xrho@asn,gy=yrho@asn]

let/d=1 angle_p_0 = angle[i=@shf:+1, j=@shf:+1]
let/title="angle centered" angle_p = angle_p_0[gx=xrho@asn,gy=yrho@asn]

let/d=1 mask_p_0 = mask_rho[i=@shf:+1, j=@shf:+1]
let/d=1 mask_p = mask_p_0[gx=xrho@asn,gy=yrho@asn]

let/d=1/units="`u[d=1],return=units`" u_p_0 = 0.5*(u_masked[j=@shf:+1]+u_masked[i=@shf:+1,j=@shf:+1])
let/title="U centered"/units="`u[d=1],return=units`" u_p = u_p_0[gx=xrho@asn,gy=yrho@asn]
let/d=1/units="`v[d=1],return=units`" v_p_0 = 0.5*(v_masked[i=@shf:+1]+v_masked[i=@shf:+1,j=@shf:+1])
let/title="V centered"/units="`v[d=1],return=units`" v_p = v_p_0[gx=xrho@asn,gy=yrho@asn]

let/d=1/units="`ubar[d=1],return=units`" ubar_p_0 = 0.5*(ubar_masked[j=@shf:+1]+ubar_masked[i=@shf:+1,j=@shf:+1])
let/title="UBAR centered"/units[d=1]="`ubar[d=1],return=units`" ubar_p = ubar_p_0[gx=xrho@asn,gy=yrho@asn]
let/d=1/units="`vbar[d=1],return=units`" vbar_p_0 = 0.5*(vbar_masked[i=@shf:+1]+vbar_masked[i=@shf:+1,j=@shf:+1])
let/title="VBAR centered"/units[d=1]="`vbar[d=1],return=units`" vbar_p = vbar_p_0[gx=xrho@asn,gy=yrho@asn]

! ==========

LET/d=1 urot = u_p*COS(angle_p) - v_p*SIN(angle_p)
LET/d=1 vrot = u_p*SIN(angle_p) + v_p*COS(angle_p)

LET/d=1 ubarrot = ubar_p*COS(angle_p) - vbar_p*SIN(angle_p)
LET/d=1 vbarrot = ubar_p*SIN(angle_p) + vbar_p*COS(angle_p)

! First attempt at creating vars on a regular grid
LET/D=1/TITLE="urot_on_rgrid"/UNITS="`urot[d=1],RETURN=units`" urot_rect = curv_to_rect(urot,map[d=2])
LET/D=1/TITLE="vrot_on_rgrid"/UNITS="`vrot[d=1],RETURN=units`" vrot_rect = curv_to_rect(vrot,map[d=2])

